name: Verify PR - Terraform Lint
on:
  workflow_call:
    inputs:
      directories:
        required: true
        type: string

jobs:
  get-directories: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.set-directories.outputs.directories }} # generate output name dir by using inner step output
    steps:
      - name: Set Directories
        id: set-directories # Give it an id to handle to get step outputs in the outputs key above
        run: echo "::set-output name=directories::$(echo ${{ input.directories }} | jq -R -c 'split(",")')
        # Define step output named dir base on ls command transformed to JSON thanks to jq
  fmt:
    runs-on: ubuntu-latest
    needs: [get-directories] # Depends on previous job
    strategy:
      matrix:
        directory: ${{ fromJson(needs.get-directories.outputs.directories) }} # List matrix strategy from directories dynamically
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ~1

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ matrix.directory }}
  tfsec:
    runs-on: ubuntu-latest
    needs: [get-directories] # Depends on previous job
    strategy:
      matrix:
        directory: ${{ fromJson(needs.get-directories.outputs.directories) }} # List matrix strategy from directories dynamically
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Get Rules
        uses: actions/checkout@v3
        with:
          repository: invitation-homes/terraform-linting-rules
          path: ${{ matrix.directory }}/.tfsec
          token: ${{ secrets.GH_REPO_ACCESS_TOKEN }}

      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ github.token }}
          working_directory: ${{ matrix.directory }}
  tflint:
    runs-on: ubuntu-latest
    needs: [get-directories] # Depends on previous job
    strategy:
      matrix:
        directory: ${{ fromJson(needs.get-directories.outputs.directories) }} # List matrix strategy from directories dynamically
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Check for TF files"
        id: check-tf-files
        uses: andstor/file-existence-action@v1
        with:
          files: "${{ matrix.directory }}/*.tf"

      - name: Get Rules
        if: steps.check-tf-files.outputs.files_exists == 'true'
        uses: actions/checkout@v3
        with:
          repository: invitation-homes/terraform-linting-rules
          path: ${{ matrix.directory }}/.tfsec
          token: ${{ secrets.GH_REPO_ACCESS_TOKEN }}

      - uses: terraform-linters/setup-tflint@v1
        if: steps.check-tf-files.outputs.files_exists == 'true'
        name: Setup TFLint
        with:
          tflint_version: latest

      - name: Initialize TFLint
        if: steps.check-tf-files.outputs.files_exists == 'true'
        working-directory: ${{ matrix.directory  }}
        run: tflint --init --config=.tfsec/.tflint.hcl

      - name: Run TFLint
        if: steps.check-tf-files.outputs.files_exists == 'true'
        working-directory: ${{ matrix.directory  }}
        run: tflint -f compact --config=.tfsec/.tflint.hcl
